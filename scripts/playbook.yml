---
- hosts: all

  #-*-* vars *-*-#
  vars:
    VM_USER: cmcelligott
    REPO_NAME: chadsterisk

  #-*-* tasks *-*-#
  tasks:

    ### apt
    - name: install apt upgrades
      apt: name={{item}} update_cache=yes
      with_items:
        - apt-transport-https
        - ca-certificates

    ### dependencies
    - name: install dev dependencies
      apt: name={{item}} update_cache=yes
      with_items:
        - python-dev
        - git

    - name: easy_install pip
      easy_install: name=pip

    ## setup git server
    - name: add git user
      user: name=git

    - name: create .ssh directory for git user
      file: path=/home/git/.ssh owner=git group=git mode=0700 state=directory

    - name: allow {{VM_USER}} to access git server via ssh
      copy:
        src: ~/.ssh/id_rsa.pub
        dest: /home/git/.ssh/authorized_keys
        mode: 0600
        owner: git
        group: git

    - name: create directory for git repository
      file: path=/opt/git/{{REPO_NAME}}.git owner=git group=git state=directory

    - name: create bare git repository
      become_user: git
      command: git init --bare /opt/git/{{REPO_NAME}}.git
      args:
        creates: /opt/git/{{REPO_NAME}}.git/HEAD
        warn: no

    ### docker
    - name: install Docker apt-key
      apt_key:
        id: 58118E89F3A912897C070ADBF76221572C52609D
        keyserver: hkp://p80.pool.sks-keyservers.net:80

    - name: install Docker apt repo
      apt_repository:
        repo: deb https://apt.dockerproject.org/repo debian-jessie main

    - name: install Docker
      apt: name=docker-engine update_cache=yes

    - name: start Docker
      service: name=docker state=started

    - name: add users to docker group
      user: name={{VM_USER}} groups=docker append=yes

    - name: install Docker python modules for Ansible
      pip: name=docker-py

    ### clone source
    - name: push source to remote
      become: false
      tags: deploy
      local_action: >
        command warn="no" git push
          --repo git@{{ ansible_default_ipv4.address }}:/opt/git/{{REPO_NAME}}.git

    - name: pull source into working directory
      git:
        repo: /opt/git/{{REPO_NAME}}.git/
        dest: /usr/src/{{REPO_NAME}}/
      register: source
      tags: deploy

    ### asterisk
    - name: build Asterisk Docker image
      docker_image:
        name: asterisk
        path: /usr/src/{{REPO_NAME}}/asterisk
        state: present
        force: yes
      when: source.changed
      tags: deploy

    - name: start Asterisk Docker container
      docker_container:
        name: asterisk
        image: asterisk
        state: started
        restart_policy: always
        network_mode: host
      when: source.changed
      tags: deploy

    ### agi
    - name: build agi Docker image
      docker_image:
        name: agi
        path: /usr/src/{{REPO_NAME}}/agi
        state: present
        force: yes
      when: source.changed
      tags: deploy

    - name: start agi Docker container
      docker_container:
        name: agi
        image: agi
        state: started
        restart_policy: always
        network_mode: host
      when: source.changed
      tags: deploy
